import{e as n}from"./app.f43e426a.js";import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";const s={},p=n(`<h1 id="dynamic-programming-\u1103\u1169\u11BC\u110C\u1165\u11A8-\u1100\u1168\u1112\u116C\u11A8\u1107\u1165\u11B8" tabindex="-1"><a class="header-anchor" href="#dynamic-programming-\u1103\u1169\u11BC\u110C\u1165\u11A8-\u1100\u1168\u1112\u116C\u11A8\u1107\u1165\u11B8" aria-hidden="true">#</a> Dynamic Programming (\uB3D9\uC801 \uACC4\uD68D\uBC95)</h1><p>\uD070 \uBB38\uC81C\uB97C \uC791\uC740 \uBB38\uC81C\uB85C \uB098\uB204\uC5B4 \uD478\uB294 \uBC29\uBC95</p><h2 id="divide-and-conquer-\u1107\u116E\u11AB\u1112\u1161\u11AF\u110C\u1165\u11BC\u1107\u1169\u11A8-\u1100\u116A\u110B\u1174-\u110E\u1161\u110B\u1175" tabindex="-1"><a class="header-anchor" href="#divide-and-conquer-\u1107\u116E\u11AB\u1112\u1161\u11AF\u110C\u1165\u11BC\u1107\u1169\u11A8-\u1100\u116A\u110B\u1174-\u110E\u1161\u110B\u1175" aria-hidden="true">#</a> Divide and Conquer(\uBD84\uD560\uC815\uBCF5)\uACFC\uC758 \uCC28\uC774</h2><p>\uC7AC\uADC0\uD568\uC218\uCC98\uB7FC \uAC19\uC740 \uAC12\uC744 \uC911\uBCF5\uB418\uAC8C \uC5F0\uC0B0\uD560 \uD544\uC694\uAC00 \uC5C6\uB2E4.</p><h2 id="\u1107\u1161\u11BC\u1107\u1165\u11B8" tabindex="-1"><a class="header-anchor" href="#\u1107\u1161\u11BC\u1107\u1165\u11B8" aria-hidden="true">#</a> \uBC29\uBC95</h2><p>\uBAA8\uB4E0 \uC791\uC740 \uBB38\uC81C\uB4E4\uC740 \uD55C\uBC88\uB9CC \uD480\uC5B4\uC57C \uD55C\uB2E4.<br> \uC791\uC740 \uBB38\uC81C\uB4E4\uC740 \uD480 \uB54C\uB9C8\uB2E4 \uC5B4\uB518\uAC00\uC5D0 \uAC12\uC744 \uC800\uC7A5\uD574\uB193\uACE0 \uD544\uC694\uD560 \uB54C \uD638\uCD9C\uD55C\uB2E4. (Memoization)</p><h2 id="\u1111\u1175\u1107\u1169\u1102\u1161\u110E\u1175\u1105\u1173\u11AF-\u110B\u1168\u1109\u1175\u1105\u1169-\u1107\u1169\u110C\u1161" tabindex="-1"><a class="header-anchor" href="#\u1111\u1175\u1107\u1169\u1102\u1161\u110E\u1175\u1105\u1173\u11AF-\u110B\u1168\u1109\u1175\u1105\u1169-\u1107\u1169\u110C\u1161" aria-hidden="true">#</a> \uD53C\uBCF4\uB098\uCE58\uB97C \uC608\uC2DC\uB85C \uBCF4\uC790</h2><h3 id="\u110C\u1162\u1100\u1171\u1112\u1161\u11B7\u1109\u116E" tabindex="-1"><a class="header-anchor" href="#\u110C\u1162\u1100\u1171\u1112\u1161\u11B7\u1109\u116E" aria-hidden="true">#</a> \uC7AC\uADC0\uD568\uC218</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">if</span> n <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> n
  <span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> fibonacci<span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> fibonacci<span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>


<span class="token keyword">print</span><span class="token punctuation">(</span>fibonacci<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 55</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\uC704\uC758 \uCF54\uB4DC\uB294 \uC7AC\uADC0\uB97C \uC774\uC6A9\uD55C \uCF54\uB4DC\uC774\uB2E4. fibonacci \uD568\uC218\uAC00 \uAC19\uC740 \uAC12\uB4E4\uC744 \uBC18\uBCF5\uD558\uBA70 \uC5F0\uC0B0\uD558\uACE0 \uC788\uB2E4.</p><p>\uC774\uB7F0 \uBD88\uD544\uC694\uD55C \uC5F0\uC0B0\uC744 \uD53C\uD558\uAE30 \uC704\uD574 \uD55C\uBC88 \uC5F0\uC0B0\uD55C \uAC12\uC744 \uC800\uC7A5\uD574\uB450\uB294 \uAC83\uC774\uB2E4.</p><h3 id="dynamic-programming-\u110B\u1175\u110B\u116D\u11BC" tabindex="-1"><a class="header-anchor" href="#dynamic-programming-\u110B\u1175\u110B\u116D\u11BC" aria-hidden="true">#</a> Dynamic Programming \uC774\uC6A9</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">fibonacci</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">if</span> n <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token number">1</span>

  <span class="token keyword">if</span> memo<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> memo<span class="token punctuation">[</span>n<span class="token punctuation">]</span>

  memo<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> fibo<span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> fibo<span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> memo<span class="token punctuation">[</span>n<span class="token punctuation">]</span>


<span class="token keyword">print</span><span class="token punctuation">(</span>fibonacci<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 55</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>DP\uB97C \uC774\uC6A9\uD558\uBA74 \uD47C \uCF54\uB4DC\uB97C \uBCF4\uBA74 memo\uB77C\uB294 \uB9AC\uC2A4\uD2B8\uC5D0 \uAC12\uC744 \uC800\uC7A5\uD574\uB193\uB294\uB2E4.</p><p>DP\uB294 Top-Down, Bottom-Up\uC774\uB77C\uB294 \uBC29\uC2DD\uC774 \uC788\uB294\uB370 \uB098\uC911\uC5D0 \uC54C\uC544\uBCF4\uB3C4\uB85D \uD558\uC790.</p>`,15);function e(o,t){return p}var i=a(s,[["render",e]]);export{i as default};
