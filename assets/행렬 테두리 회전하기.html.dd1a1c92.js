import{r as o,o as e,c,a as n,b as p,w as t,F as u,d as s,e as l}from"./app.9aca45ba.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";var r="/images/algorithm/\uD504\uB85C\uADF8\uB798\uBA38\uC2A4/\uD589\uB82C-\uD14C\uB450\uB9AC-\uD68C\uC804\uD558\uAE30/grid_example.png",k="/images/algorithm/\uD504\uB85C\uADF8\uB798\uBA38\uC2A4/\uD589\uB82C-\uD14C\uB450\uB9AC-\uD68C\uC804\uD558\uAE30/rotation_example.png",m="/images/algorithm/\uD504\uB85C\uADF8\uB798\uBA38\uC2A4/\uD589\uB82C-\uD14C\uB450\uB9AC-\uD68C\uC804\uD558\uAE30/example1.png",b="/images/algorithm/\uD504\uB85C\uADF8\uB798\uBA38\uC2A4/\uD589\uB82C-\uD14C\uB450\uB9AC-\uD68C\uC804\uD558\uAE30/example2.png",d="/images/algorithm/\uD504\uB85C\uADF8\uB798\uBA38\uC2A4/\uD589\uB82C-\uD14C\uB450\uB9AC-\uD68C\uC804\uD558\uAE30/explain1.jpg",g="/images/algorithm/\uD504\uB85C\uADF8\uB798\uBA38\uC2A4/\uD589\uB82C-\uD14C\uB450\uB9AC-\uD68C\uC804\uD558\uAE30/explain1-result.jpg",h="/images/algorithm/\uD504\uB85C\uADF8\uB798\uBA38\uC2A4/\uD589\uB82C-\uD14C\uB450\uB9AC-\uD68C\uC804\uD558\uAE30/explain1-result2.jpg",y="/images/algorithm/\uD504\uB85C\uADF8\uB798\uBA38\uC2A4/\uD589\uB82C-\uD14C\uB450\uB9AC-\uD68C\uC804\uD558\uAE30/explain1-result3.jpg",x="/images/algorithm/\uD504\uB85C\uADF8\uB798\uBA38\uC2A4/\uD589\uB82C-\uD14C\uB450\uB9AC-\uD68C\uC804\uD558\uAE30/explain1-result4.jpg",_="/images/algorithm/\uD504\uB85C\uADF8\uB798\uBA38\uC2A4/\uD589\uB82C-\uD14C\uB450\uB9AC-\uD68C\uC804\uD558\uAE30/explain1-result5.jpg";const w={},f=n("h1",{id:"\u1112\u1162\u11BC\u1105\u1167\u11AF-\u1110\u1166\u1103\u116E\u1105\u1175-\u1112\u116C\u110C\u1165\u11AB\u1112\u1161\u1100\u1175",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u1112\u1162\u11BC\u1105\u1167\u11AF-\u1110\u1166\u1103\u116E\u1105\u1175-\u1112\u116C\u110C\u1165\u11AB\u1112\u1161\u1100\u1175","aria-hidden":"true"},"#"),s(" \uD589\uB82C \uD14C\uB450\uB9AC \uD68C\uC804\uD558\uAE30")],-1),v={class:"custom-container tip"},N=n("p",{class:"custom-container-title"},"\uBAA9\uCC28",-1),j={class:"table-of-contents"},q=s("\uBB38\uC81C"),V=s("\uD480\uC774 \uBC29\uBC95"),B=s("1. \uD14C\uB450\uB9AC\uC758 \uC67C\uCABD \uBD80\uBD84\uBD80\uD130 \uC704\uB85C \uD55C\uCE78\uC529 \uC774\uB3D9"),C=s("2. \uC774\uC5B4\uC11C \uC544\uB7AB\uCABD -> \uC624\uB978\uCABD -> \uC704\uCABD \uC21C\uC11C\uB85C \uC2DC\uACC4\uBC29\uD5A5 \uD68C\uC804"),F=s("\uC804\uCCB4 \uCF54\uB4DC"),L=s("solution \uD568\uC218"),R=s("min \uD568\uC218 (\uC5B4\uB5A4 \uC218\uAC00 \uC791\uC740\uC9C0 \uBE44\uAD50\uD574\uC11C \uB9AC\uD134\uD574\uC90C)"),E=s("rotation \uD568\uC218 (\uD589\uB82C \uD68C\uC804 \uD6C4 \uAC00\uC7A5 \uC791\uC740 \uC218 return)"),S=s("\uC81C\uCD9C \uCF54\uB4DC"),T=l('<h2 id="\u1106\u116E\u11AB\u110C\u1166" tabindex="-1"><a class="header-anchor" href="#\u1106\u116E\u11AB\u110C\u1166" aria-hidden="true">#</a> \uBB38\uC81C</h2><p>\uBB38\uC81C\uB97C \uD480\uB2E4\uAC00 \uC774 \uAE00\uC744 \uCC3E\uC544\uC624\uC2E0 \uBD84\uB4E4\uC774 \uB300\uB2E4\uC218\uB77C \uC0DD\uAC01\uB418\uC5B4 \uC811\uC5B4\uB193\uC558\uC2B5\uB2C8\uB2E4.</p><details class="custom-container details"><summary>\uBB38\uC81C\uB97C \uBCF4\uC2E4 \uBD84\uB4E4\uC740 \uD074\uB9AD\uD574\uC8FC\uC138\uC694!!</summary><h3>\uBB38\uC81C \uC124\uBA85</h3> rows x columns \uD06C\uAE30\uC778 \uD589\uB82C\uC774 \uC788\uC2B5\uB2C8\uB2E4. \uD589\uB82C\uC5D0\uB294 1\uBD80\uD130 rows x columns\uAE4C\uC9C0\uC758 \uC22B\uC790\uAC00 \uD55C \uC904\uC529 \uC21C\uC11C\uB300\uB85C \uC801\uD600\uC788\uC2B5\uB2C8\uB2E4. \uC774 \uD589\uB82C\uC5D0\uC11C \uC9C1\uC0AC\uAC01\uD615 \uBAA8\uC591\uC758 \uBC94\uC704\uB97C \uC5EC\uB7EC \uBC88 \uC120\uD0DD\uD574, \uD14C\uB450\uB9AC \uBD80\uBD84\uC5D0 \uC788\uB294 \uC22B\uC790\uB4E4\uC744 \uC2DC\uACC4\uBC29\uD5A5\uC73C\uB85C \uD68C\uC804\uC2DC\uD0A4\uB824 \uD569\uB2C8\uB2E4. \uAC01 \uD68C\uC804\uC740 (x1, y1, x2, y2)\uC778 \uC815\uC218 4\uAC1C\uB85C \uD45C\uD604\uD558\uBA70, \uADF8 \uC758\uBBF8\uB294 \uB2E4\uC74C\uACFC \uAC19\uC2B5\uB2C8\uB2E4. <p>x1 \uD589 y1 \uC5F4\uBD80\uD130 x2 \uD589 y2 \uC5F4\uAE4C\uC9C0\uC758 \uC601\uC5ED\uC5D0 \uD574\uB2F9\uD558\uB294 \uC9C1\uC0AC\uAC01\uD615\uC5D0\uC11C \uD14C\uB450\uB9AC\uC5D0 \uC788\uB294 \uC22B\uC790\uB4E4\uC744 \uD55C \uCE78\uC529 \uC2DC\uACC4\uBC29\uD5A5\uC73C\uB85C \uD68C\uC804\uD569\uB2C8\uB2E4.<br> \uB2E4\uC74C\uC740 6 x 6 \uD06C\uAE30 \uD589\uB82C\uC758 \uC608\uC2DC\uC785\uB2C8\uB2E4.</p><p><img src="'+r+'" alt="grid_example"></p><p>\uC774 \uD589\uB82C\uC5D0 (2, 2, 5, 4) \uD68C\uC804\uC744 \uC801\uC6A9\uD558\uBA74, \uC544\uB798 \uADF8\uB9BC\uACFC \uAC19\uC774 2\uD589 2\uC5F4\uBD80\uD130 5\uD589 4\uC5F4\uAE4C\uC9C0 \uC601\uC5ED\uC758 \uD14C\uB450\uB9AC\uAC00 \uC2DC\uACC4\uBC29\uD5A5\uC73C\uB85C \uD68C\uC804\uD569\uB2C8\uB2E4.<br> \uC774\uB54C, \uC911\uC559\uC758 15\uC640 21\uC774 \uC788\uB294 \uC601\uC5ED\uC740 \uD68C\uC804\uD558\uC9C0 \uC54A\uB294 \uAC83\uC744 \uC8FC\uC758\uD558\uC138\uC694.</p><p><img src="'+k+'" alt="rotation_example"></p><p>\uD589\uB82C\uC758 \uC138\uB85C \uAE38\uC774(\uD589 \uAC1C\uC218) rows, \uAC00\uB85C \uAE38\uC774(\uC5F4 \uAC1C\uC218) columns, \uADF8\uB9AC\uACE0 \uD68C\uC804\uB4E4\uC758 \uBAA9\uB85D queries\uAC00 \uC8FC\uC5B4\uC9C8 \uB54C,<br> \uAC01 \uD68C\uC804\uB4E4\uC744 \uBC30\uC5F4\uC5D0 \uC801\uC6A9\uD55C \uB4A4, \uADF8 \uD68C\uC804\uC5D0 \uC758\uD574 \uC704\uCE58\uAC00 \uBC14\uB010 \uC22B\uC790\uB4E4 \uC911 <u><strong>\uAC00\uC7A5 \uC791\uC740 \uC22B\uC790\uB4E4\uC744 \uC21C\uC11C\uB300\uB85C \uBC30\uC5F4\uC5D0 \uB2F4\uC544</strong></u> return \uD558\uB3C4\uB85D solution \uD568\uC218\uB97C \uC644\uC131\uD574\uC8FC\uC138\uC694. <br></p><h3>\uC81C\uD55C \uC0AC\uD56D</h3> - rows\uB294 2 \uC774\uC0C1 100 \uC774\uD558\uC778 \uC790\uC5F0\uC218\uC785\uB2C8\uB2E4. - columns\uB294 2 \uC774\uC0C1 100 \uC774\uD558\uC778 \uC790\uC5F0\uC218\uC785\uB2C8\uB2E4. - \uCC98\uC74C\uC5D0 \uD589\uB82C\uC5D0\uB294 \uAC00\uB85C \uBC29\uD5A5\uC73C\uB85C \uC22B\uC790\uAC00 1\uBD80\uD130 \uD558\uB098\uC529 \uC99D\uAC00\uD558\uBA74\uC11C \uC801\uD600\uC788\uC2B5\uB2C8\uB2E4. - \uC989, \uC544\uBB34 \uD68C\uC804\uB3C4 \uD558\uC9C0 \uC54A\uC558\uC744 \uB54C, i \uD589 j \uC5F4\uC5D0 \uC788\uB294 \uC22B\uC790\uB294 ((i-1) x columns + j)\uC785\uB2C8\uB2E4. - queries\uC758 \uD589\uC758 \uAC1C\uC218(\uD68C\uC804\uC758 \uAC1C\uC218)\uB294 1 \uC774\uC0C1 10,000 \uC774\uD558\uC785\uB2C8\uB2E4. - queries\uC758 \uAC01 \uD589\uC740 4\uAC1C\uC758 \uC815\uC218 [x1, y1, x2, y2]\uC785\uB2C8\uB2E4. - x1 \uD589 y1 \uC5F4\uBD80\uD130 x2 \uD589 y2 \uC5F4\uAE4C\uC9C0 \uC601\uC5ED\uC758 \uD14C\uB450\uB9AC\uB97C \uC2DC\uACC4\uBC29\uD5A5\uC73C\uB85C \uD68C\uC804\uD55C\uB2E4\uB294 \uB73B\uC785\uB2C8\uB2E4. - 1 \u2264 x1 &lt; x2 \u2264 rows, 1 \u2264 y1 &lt; y2 \u2264 columns\uC785\uB2C8\uB2E4. - \uBAA8\uB4E0 \uD68C\uC804\uC740 \uC21C\uC11C\uB300\uB85C \uC774\uB8E8\uC5B4\uC9D1\uB2C8\uB2E4. - \uC608\uB97C \uB4E4\uC5B4, \uB450 \uBC88\uC9F8 \uD68C\uC804\uC5D0 \uB300\uD55C \uB2F5\uC740 \uCCAB \uBC88\uC9F8 \uD68C\uC804\uC744 \uC2E4\uD589\uD55C \uB2E4\uC74C, \uADF8 \uC0C1\uD0DC\uC5D0\uC11C \uB450 \uBC88\uC9F8 \uD68C\uC804\uC744 \uC2E4\uD589\uD588\uC744 \uB54C \uC774\uB3D9\uD55C \uC22B\uC790 \uC911 \uCD5C\uC19F\uAC12\uC744 \uAD6C\uD558\uBA74 \uB429\uB2C8\uB2E4. <h3>\uC785\uCD9C\uB825 \uC608\uC2DC</h3> | rows | columns | queries | result | |:---:|:---:|:---:|:---:| | `6` | `6` | `[[2,2,5,4],[3,3,6,6],[5,1,6,3]]` | `[8, 10, 25]` | | `3` | `3` | `[[1,1,2,2],[1,2,2,3],[2,1,3,2],[2,2,3,3]]` | `[1, 1, 5, 3]` | | `100` | `97` | `[[1,1,100,97]]` | `[1]` | <h3>\uC785\uCD9C\uB825 \uC608 \uC124\uBA85</h3><p><strong>\uC785\uCD9C\uB825 \uC608 #1</strong></p><ul><li>\uD68C\uC804\uC744 \uC218\uD589\uD558\uB294 \uACFC\uC815\uC744 \uADF8\uB9BC\uC73C\uB85C \uD45C\uD604\uD558\uBA74 \uB2E4\uC74C\uACFC \uAC19\uC2B5\uB2C8\uB2E4.<br><img src="'+m+'" alt="rotation_example"></li></ul><p><strong>\uC785\uCD9C\uB825 \uC608 #2</strong></p><ul><li>\uD68C\uC804\uC744 \uC218\uD589\uD558\uB294 \uACFC\uC815\uC744 \uADF8\uB9BC\uC73C\uB85C \uD45C\uD604\uD558\uBA74 \uB2E4\uC74C\uACFC \uAC19\uC2B5\uB2C8\uB2E4.<br><img src="'+b+'" alt="rotation_example"></li></ul><p><strong>\uC785\uCD9C\uB825 \uC608 #3</strong></p><ul><li>\uC774 \uC608\uC2DC\uC5D0\uC11C\uB294 \uD589\uB82C\uC758 \uD14C\uB450\uB9AC\uC5D0 \uC704\uCE58\uD55C \uBAA8\uB4E0 \uCE78\uB4E4\uC774 \uC6C0\uC9C1\uC785\uB2C8\uB2E4. \uB530\uB77C\uC11C, \uD589\uB82C\uC758 \uD14C\uB450\uB9AC\uC5D0 \uC788\uB294 \uC218 \uC911 \uAC00\uC7A5 \uC791\uC740 \uC22B\uC790\uC778 1\uC774 \uBC14\uB85C \uB2F5\uC774 \uB429\uB2C8\uB2E4.</li></ul></details><br><h2 id="\u1111\u116E\u11AF\u110B\u1175-\u1107\u1161\u11BC\u1107\u1165\u11B8" tabindex="-1"><a class="header-anchor" href="#\u1111\u116E\u11AF\u110B\u1175-\u1107\u1161\u11BC\u1107\u1165\u11B8" aria-hidden="true">#</a> \uD480\uC774 \uBC29\uBC95</h2><p>\uD68C\uC804\uC744 \uC218\uD589\uD560 \uD589\uB82C\uBD80\uD130 \uB9CC\uB4E4\uC5B4\uC92C\uB2E4.<br> \uD589\uB82C\uC744 \uB9CC\uB4DC\uB294 \uB85C\uC9C1\uC740 solution \uD568\uC218 \uB0B4\uC5D0\uC11C \uC791\uC131\uD588\uACE0 \uD68C\uC804\uD558\uB294 \uB85C\uC9C1\uC740 \uB530\uB85C \uBD84\uB9AC\uD558\uC600\uB2E4.</p><p>\uD589\uB82C \uD14C\uB450\uB9AC\uB97C \uD68C\uC804\uD558\uB294 \uD568\uC218 <code>rotation</code> \uC740 \uD68C\uC804\uD55C \uD6C4 \uAC00\uC7A5 \uC791\uC740 \uC218\uB97C return \uD55C\uB2E4.</p><p>\uD68C\uC804\uD558\uB294 \uD14C\uB450\uB9AC\uC758 \uC88C\uD45C\uAC12\uC778 <code>[x1, y1, x2, y2]</code>\uB97C <code>[2, 2, 5, 4]</code>\uB77C\uACE0 \uD558\uC790.</p><h3 id="_1-\u1110\u1166\u1103\u116E\u1105\u1175\u110B\u1174-\u110B\u116C\u11AB\u110D\u1169\u11A8-\u1107\u116E\u1107\u116E\u11AB\u1107\u116E\u1110\u1165-\u110B\u1171\u1105\u1169-\u1112\u1161\u11AB\u110F\u1161\u11AB\u110A\u1175\u11A8-\u110B\u1175\u1103\u1169\u11BC" tabindex="-1"><a class="header-anchor" href="#_1-\u1110\u1166\u1103\u116E\u1105\u1175\u110B\u1174-\u110B\u116C\u11AB\u110D\u1169\u11A8-\u1107\u116E\u1107\u116E\u11AB\u1107\u116E\u1110\u1165-\u110B\u1171\u1105\u1169-\u1112\u1161\u11AB\u110F\u1161\u11AB\u110A\u1175\u11A8-\u110B\u1175\u1103\u1169\u11BC" aria-hidden="true">#</a> 1. \uD14C\uB450\uB9AC\uC758 \uC67C\uCABD \uBD80\uBD84\uBD80\uD130 \uC704\uB85C \uD55C\uCE78\uC529 \uC774\uB3D9</h3><p>\uB2E8, \uC774\uB3D9\uC2DC\uD0A4\uAE30 \uC804\uC5D0 \uAC00\uC7A5 \uC717\uBD80\uBD84\uC778 <code>8</code>\uC744 \uBCC0\uC218\uC5D0 \uBCF4\uAD00\uD574\uB193\uB294\uB2E4.<br><img src="'+d+`" width="500px" height="500px"></p><p>\uD574\uB2F9 \uB85C\uC9C1\uC744 \uCF54\uB4DC\uB85C \uD45C\uD604\uD558\uBA74 \uB2E4\uC74C\uACFC \uAC19\uB2E4.<br> \uC704\uC5D0\uC11C \uC124\uBA85\uD55C \uAC83\uACFC \uB2E4\uB974\uAC8C minNum\uC774 \uCD94\uAC00\uB418\uC5B4 \uC788\uB294\uB370 \uD68C\uC804\uD560 \uB54C \uB9C8\uB2E4 \uCD5C\uC19F\uAC12\uC744 \uCCB4\uD06C\uD558\uAE30 \uC704\uD568\uC774\uB2E4.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> temp <span class="token operator">=</span> grid<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 8</span>
<span class="token keyword">let</span> minNum <span class="token operator">=</span> temp<span class="token punctuation">;</span> <span class="token comment">// \uAC00\uC7A5 \uC791\uC740 \uC218\uB294 \uC77C\uB2E8 8\uB85C \uCD08\uAE30\uD654</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> x1<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> x2<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span> <span class="token operator">=</span> grid<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// ex) 8\uC758 \uC790\uB9AC\uC5D0 14\uB97C \uB123\uC5B4\uC90C</span>
  minNum <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token punctuation">,</span> minNum<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// min(a,b) = a\uC640 b \uC911 \uC791\uC740 \uC218 return</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\uC774\uB3D9\uD558\uACE0 \uB098\uBA74 \uC544\uB798\uC640 \uAC19\uC774 \uBCC0\uACBD\uB41C\uB2E4.</p><img src="`+g+'" width="500px" height="500px"><h3 id="_2-\u110B\u1175\u110B\u1165\u1109\u1165-\u110B\u1161\u1105\u1162\u11BA\u110D\u1169\u11A8-\u110B\u1169\u1105\u1173\u11AB\u110D\u1169\u11A8-\u110B\u1171\u110D\u1169\u11A8-\u1109\u116E\u11AB\u1109\u1165\u1105\u1169-\u1109\u1175\u1100\u1168\u1107\u1161\u11BC\u1112\u1163\u11BC-\u1112\u116C\u110C\u1165\u11AB" tabindex="-1"><a class="header-anchor" href="#_2-\u110B\u1175\u110B\u1165\u1109\u1165-\u110B\u1161\u1105\u1162\u11BA\u110D\u1169\u11A8-\u110B\u1169\u1105\u1173\u11AB\u110D\u1169\u11A8-\u110B\u1171\u110D\u1169\u11A8-\u1109\u116E\u11AB\u1109\u1165\u1105\u1169-\u1109\u1175\u1100\u1168\u1107\u1161\u11BC\u1112\u1163\u11BC-\u1112\u116C\u110C\u1165\u11AB" aria-hidden="true">#</a> 2. \uC774\uC5B4\uC11C \uC544\uB7AB\uCABD -&gt; \uC624\uB978\uCABD -&gt; \uC704\uCABD \uC21C\uC11C\uB85C \uC2DC\uACC4\uBC29\uD5A5 \uD68C\uC804</h3><p>\uB85C\uC9C1\uC740 \uC704\uC5D0\uC11C \uC124\uBA85\uD588\uC73C\uB2C8 \uADF8\uB9BC\uC73C\uB85C \uB300\uCCB4\uD558\uACA0\uB2E4.<br> temp\uC640 minNum \uBCC0\uC218 \uC120\uC5B8 \uBD80\uBD84\uC740 \uC704\uC5D0\uC11C \uC774\uBBF8 \uD588\uC73C\uB2C8 for\uBB38\uB9CC \uBD84\uAE30\uB9C8\uB2E4 \uBC18\uBCF5\uC2DC\uCF1C\uC8FC\uBA74 \uB41C\uB2E4.</p><p><strong>1. \uC544\uB7AB\uCABD</strong><br><img src="'+h+'" width="500px" height="500px"></p><p><strong>2. \uC624\uB978\uCABD</strong><br><img src="'+y+'" width="500px" height="500px"></p><p><strong>3. \uC717\uCABD</strong><br><img src="'+x+'" width="500px" height="500px"></p><p>\uD68C\uC804\uC740 \uB2E4 \uB05D\uB0C8\uB2E4.<br> \uC774\uC81C temp\uC5D0 \uB123\uC5B4\uB193\uC558\uB358 8\uC744 <code>[x1][y1+1]</code> \uC704\uCE58\uC5D0 \uB123\uC5B4\uC8FC\uC790<br><img src="'+_+`" width="500px" height="500px"></p><p>for\uBB38\uC744 \uB3CC\uBA74\uC11C \uACC4\uC0B0\uB41C <code>minNum</code>\uC744 <code>answer</code> \uBC30\uC5F4\uC5D0 \uB123\uC5B4\uC8FC\uC790.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>answer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>minNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="\u110C\u1165\u11AB\u110E\u1166-\u110F\u1169\u1103\u1173" tabindex="-1"><a class="header-anchor" href="#\u110C\u1165\u11AB\u110E\u1166-\u110F\u1169\u1103\u1173" aria-hidden="true">#</a> \uC804\uCCB4 \uCF54\uB4DC</h2><h3 id="solution-\u1112\u1161\u11B7\u1109\u116E" tabindex="-1"><a class="header-anchor" href="#solution-\u1112\u1161\u11B7\u1109\u116E" aria-hidden="true">#</a> solution \uD568\uC218</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">solution</span><span class="token punctuation">(</span><span class="token parameter">rows<span class="token punctuation">,</span> columns<span class="token punctuation">,</span> queries</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> grid <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// rows * columns \uD589\uB82C</span>
  <span class="token keyword">let</span> cnt <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \uD589\uB82C\uC744 \uC21C\uD68C\uD558\uBA70 1 ~ rows*columns \uB9CC\uD07C \uB123\uC5B4\uC90C</span>

  <span class="token comment">// \uD589\uB82C \uB9CC\uB4DC\uB294 \uB85C\uC9C1</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> rows<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> row <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> columns<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      row<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cnt<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    grid<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> queries<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">query</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">rotation</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> query<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="min-\u1112\u1161\u11B7\u1109\u116E-\u110B\u1165\u1104\u1165\u11AB-\u1109\u116E\u1100\u1161-\u110C\u1161\u11A8\u110B\u1173\u11AB\u110C\u1175-\u1107\u1175\u1100\u116D\u1112\u1162\u1109\u1165-\u1105\u1175\u1110\u1165\u11AB\u1112\u1162\u110C\u116E\u11B7" tabindex="-1"><a class="header-anchor" href="#min-\u1112\u1161\u11B7\u1109\u116E-\u110B\u1165\u1104\u1165\u11AB-\u1109\u116E\u1100\u1161-\u110C\u1161\u11A8\u110B\u1173\u11AB\u110C\u1175-\u1107\u1175\u1100\u116D\u1112\u1162\u1109\u1165-\u1105\u1175\u1110\u1165\u11AB\u1112\u1162\u110C\u116E\u11B7" aria-hidden="true">#</a> min \uD568\uC218 (\uC5B4\uB5A4 \uC218\uAC00 \uC791\uC740\uC9C0 \uBE44\uAD50\uD574\uC11C \uB9AC\uD134\uD574\uC90C)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">min</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b <span class="token operator">?</span> b <span class="token operator">:</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \uC5B4\uB5A4 \uC218\uAC00 \uC791\uC740\uC9C0 \uBE44\uAD50\uD568</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="rotation-\u1112\u1161\u11B7\u1109\u116E-\u1112\u1162\u11BC\u1105\u1167\u11AF-\u1112\u116C\u110C\u1165\u11AB-\u1112\u116E-\u1100\u1161\u110C\u1161\u11BC-\u110C\u1161\u11A8\u110B\u1173\u11AB-\u1109\u116E-return" tabindex="-1"><a class="header-anchor" href="#rotation-\u1112\u1161\u11B7\u1109\u116E-\u1112\u1162\u11BC\u1105\u1167\u11AF-\u1112\u116C\u110C\u1165\u11AB-\u1112\u116E-\u1100\u1161\u110C\u1161\u11BC-\u110C\u1161\u11A8\u110B\u1173\u11AB-\u1109\u116E-return" aria-hidden="true">#</a> rotation \uD568\uC218 (\uD589\uB82C \uD68C\uC804 \uD6C4 \uAC00\uC7A5 \uC791\uC740 \uC218 return)</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">rotation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">grid<span class="token punctuation">,</span> <span class="token punctuation">[</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y2<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  x1<span class="token operator">--</span><span class="token punctuation">;</span>
  y1<span class="token operator">--</span><span class="token punctuation">;</span>
  x2<span class="token operator">--</span><span class="token punctuation">;</span>
  y2<span class="token operator">--</span><span class="token punctuation">;</span> <span class="token comment">// \uC778\uB371\uC2A4\uC5D0 \uB9DE\uAC8C -1\uC529 \uD574\uC90C</span>
  <span class="token keyword">const</span> temp <span class="token operator">=</span> grid<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \uC88C\uCE21 \uC0C1\uB2E8\uC758 \uC218\uB97C \uC800\uC7A5\uD574\uB193\uC790.</span>
  <span class="token keyword">let</span> minNum <span class="token operator">=</span> temp<span class="token punctuation">;</span> <span class="token comment">// \uAC00\uC7A5 \uC791\uC740 \uC218\uB294 \uC77C\uB2E8 \uC88C\uCE21\uC0C1\uB2E8\uC73C\uB85C \uCD08\uAE30\uD654</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> x1<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> x2<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uC88C\uCE21 (\uC544\uB7AB\uCABD\uC758 \uC22B\uC790\uB97C \uC704\uB85C \uC774\uB3D9)</span>
    grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span> <span class="token operator">=</span> grid<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token punctuation">;</span>
    minNum <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token punctuation">,</span> minNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> y1<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> y2<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uD558\uB2E8 (\uC624\uB978\uCABD\uC758 \uC22B\uC790\uB97C \uC67C\uCABD\uC73C\uB85C \uC774\uB3D9)</span>
    grid<span class="token punctuation">[</span>x2<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> grid<span class="token punctuation">[</span>x2<span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    minNum <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>grid<span class="token punctuation">[</span>x2<span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> minNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> x2<span class="token punctuation">;</span> i <span class="token operator">&gt;</span> x1<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uC6B0\uCE21 (\uC717\uCABD\uC758 \uC22B\uC790\uB97C \uC544\uB798\uB85C \uC774\uB3D9)</span>
    grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>y2<span class="token punctuation">]</span> <span class="token operator">=</span> grid<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y2<span class="token punctuation">]</span><span class="token punctuation">;</span>
    minNum <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y2<span class="token punctuation">]</span><span class="token punctuation">,</span> minNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> y2<span class="token punctuation">;</span> i <span class="token operator">&gt;</span> y1<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uC0C1\uB2E8 (\uC67C\uCABD\uC758 \uC22B\uC790\uB97C \uC624\uB978\uCABD\uC73C\uB85C \uC774\uB3D9)</span>
    grid<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> grid<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    minNum <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>grid<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> minNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  grid<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span> <span class="token comment">// (x1, y1+1) \uC88C\uD45C\uC5D0 temp(x1, y1)\uC744 \uB123\uC5B4\uC90C\uC73C\uB85C\uC368 \uB9C8\uBB34\uB9AC</span>

  <span class="token keyword">return</span> minNum<span class="token punctuation">;</span> <span class="token comment">// \uAC00\uC7A5 \uC791\uC740 \uC218\uB97C push!</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="\u110C\u1166\u110E\u116E\u11AF-\u110F\u1169\u1103\u1173" tabindex="-1"><a class="header-anchor" href="#\u110C\u1166\u110E\u116E\u11AF-\u110F\u1169\u1103\u1173" aria-hidden="true">#</a> \uC81C\uCD9C \uCF54\uB4DC</h3><details class="custom-container details"><summary>\uC5F4\uAE30</summary><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">solution</span><span class="token punctuation">(</span><span class="token parameter">rows<span class="token punctuation">,</span> columns<span class="token punctuation">,</span> queries</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \uD589\uB82C \uB9CC\uB4DC\uB294 \uB85C\uC9C1</span>
  <span class="token keyword">const</span> grid <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> cnt <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> rows<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> row <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> columns<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      row<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cnt<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    grid<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> queries<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">query</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">rotation</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> query<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \uC5B4\uB5A4 \uC218\uAC00 \uC791\uC740\uC9C0 \uBE44\uAD50\uD568</span>
<span class="token keyword">const</span> <span class="token function-variable function">min</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> b <span class="token operator">?</span> b <span class="token operator">:</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \uB85C\uD14C\uC774\uC158 \uD568\uC218\uB294 \uD68C\uC804 \uD6C4 \uAC00\uC7A5 \uC791\uC740 \uC218\uB97C \uB9AC\uD134\uD574\uC90C</span>
<span class="token keyword">const</span> <span class="token function-variable function">rotation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">grid<span class="token punctuation">,</span> <span class="token punctuation">[</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y2<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  x1<span class="token operator">--</span><span class="token punctuation">;</span>
  y1<span class="token operator">--</span><span class="token punctuation">;</span>
  x2<span class="token operator">--</span><span class="token punctuation">;</span>
  y2<span class="token operator">--</span><span class="token punctuation">;</span> <span class="token comment">// \uC778\uB371\uC2A4\uC5D0 \uB9DE\uAC8C -1\uC529 \uD574\uC90C</span>
  <span class="token keyword">const</span> temp <span class="token operator">=</span> grid<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \uC88C\uCE21 \uC0C1\uB2E8\uC758 \uC218\uB97C \uC800\uC7A5\uD574\uB193\uC790.</span>
  <span class="token keyword">let</span> minNum <span class="token operator">=</span> temp<span class="token punctuation">;</span> <span class="token comment">// \uAC00\uC7A5 \uC791\uC740 \uC218\uB294 \uC77C\uB2E8 \uC88C\uCE21\uC0C1\uB2E8\uC73C\uB85C \uCD08\uAE30\uD654</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> x1<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> x2<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uC88C\uCE21 (\uC544\uB7AB\uCABD\uC758 \uC22B\uC790\uB97C \uC704\uB85C \uB561\uAE40)</span>
    grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span> <span class="token operator">=</span> grid<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token punctuation">;</span>
    minNum <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token punctuation">,</span> minNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> y1<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> y2<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uD558\uB2E8 (\uC624\uB978\uCABD\uC758 \uC22B\uC790\uB97C \uC67C\uCABD\uC73C\uB85C \uB561\uAE40)</span>
    grid<span class="token punctuation">[</span>x2<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> grid<span class="token punctuation">[</span>x2<span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    minNum <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>grid<span class="token punctuation">[</span>x2<span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> minNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> x2<span class="token punctuation">;</span> i <span class="token operator">&gt;</span> x1<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uC6B0\uCE21 (\uC717\uCABD\uC758 \uC22B\uC790\uB97C \uC544\uB798\uB85C \uB561\uAE40)</span>
    grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>y2<span class="token punctuation">]</span> <span class="token operator">=</span> grid<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y2<span class="token punctuation">]</span><span class="token punctuation">;</span>
    minNum <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>y2<span class="token punctuation">]</span><span class="token punctuation">,</span> minNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> y2<span class="token punctuation">;</span> i <span class="token operator">&gt;</span> y1<span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uC0C1\uB2E8 (\uC67C\uCABD\uC758 \uC22B\uC790\uB97C \uC624\uB978\uCABD\uC73C\uB85C \uB561\uAE40)</span>
    grid<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> grid<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    minNum <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>grid<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> minNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  grid<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span> <span class="token comment">// (x1, y1+1) \uC88C\uD45C\uC5D0 temp(x1, y1)\uC744 \uB123\uC5B4\uC90C\uC73C\uB85C\uC368 \uB9C8\uBB34\uB9AC</span>

  <span class="token keyword">return</span> minNum<span class="token punctuation">;</span> <span class="token comment">// \uAC00\uC7A5 \uC791\uC740 \uC218\uB97C push!</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div></details>`,31);function z(A,D){const a=o("RouterLink");return e(),c(u,null,[f,n("div",v,[N,n("nav",j,[n("ul",null,[n("li",null,[p(a,{to:"#\u1106\u116E\u11AB\u110C\u1166"},{default:t(()=>[q]),_:1})]),n("li",null,[p(a,{to:"#\u1111\u116E\u11AF\u110B\u1175-\u1107\u1161\u11BC\u1107\u1165\u11B8"},{default:t(()=>[V]),_:1}),n("ul",null,[n("li",null,[p(a,{to:"#_1-\u1110\u1166\u1103\u116E\u1105\u1175\u110B\u1174-\u110B\u116C\u11AB\u110D\u1169\u11A8-\u1107\u116E\u1107\u116E\u11AB\u1107\u116E\u1110\u1165-\u110B\u1171\u1105\u1169-\u1112\u1161\u11AB\u110F\u1161\u11AB\u110A\u1175\u11A8-\u110B\u1175\u1103\u1169\u11BC"},{default:t(()=>[B]),_:1})]),n("li",null,[p(a,{to:"#_2-\u110B\u1175\u110B\u1165\u1109\u1165-\u110B\u1161\u1105\u1162\u11BA\u110D\u1169\u11A8-\u110B\u1169\u1105\u1173\u11AB\u110D\u1169\u11A8-\u110B\u1171\u110D\u1169\u11A8-\u1109\u116E\u11AB\u1109\u1165\u1105\u1169-\u1109\u1175\u1100\u1168\u1107\u1161\u11BC\u1112\u1163\u11BC-\u1112\u116C\u110C\u1165\u11AB"},{default:t(()=>[C]),_:1})])])]),n("li",null,[p(a,{to:"#\u110C\u1165\u11AB\u110E\u1166-\u110F\u1169\u1103\u1173"},{default:t(()=>[F]),_:1}),n("ul",null,[n("li",null,[p(a,{to:"#solution-\u1112\u1161\u11B7\u1109\u116E"},{default:t(()=>[L]),_:1})]),n("li",null,[p(a,{to:"#min-\u1112\u1161\u11B7\u1109\u116E-\u110B\u1165\u1104\u1165\u11AB-\u1109\u116E\u1100\u1161-\u110C\u1161\u11A8\u110B\u1173\u11AB\u110C\u1175-\u1107\u1175\u1100\u116D\u1112\u1162\u1109\u1165-\u1105\u1175\u1110\u1165\u11AB\u1112\u1162\u110C\u116E\u11B7"},{default:t(()=>[R]),_:1})]),n("li",null,[p(a,{to:"#rotation-\u1112\u1161\u11B7\u1109\u116E-\u1112\u1162\u11BC\u1105\u1167\u11AF-\u1112\u116C\u110C\u1165\u11AB-\u1112\u116E-\u1100\u1161\u110C\u1161\u11BC-\u110C\u1161\u11A8\u110B\u1173\u11AB-\u1109\u116E-return"},{default:t(()=>[E]),_:1})]),n("li",null,[p(a,{to:"#\u110C\u1166\u110E\u116E\u11AF-\u110F\u1169\u1103\u1173"},{default:t(()=>[S]),_:1})])])])])])]),T],64)}var I=i(w,[["render",z]]);export{I as default};
