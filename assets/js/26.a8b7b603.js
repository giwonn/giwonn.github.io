(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{424:function(t,a,s){"use strict";s.r(a);var n=s(22),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"jpa"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jpa"}},[t._v("#")]),t._v(" JPA")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("Java ORM 기술 표준 인터페이스")]),t._v(" "),s("ul",[s("li",[t._v("관계형 데이터베이스 : 어떻게 데이터를 저장할지에 초점이 맞춰진 기술")]),t._v(" "),s("li",[t._v("객체지향 프로그래밍 : 기능과 속성을 한곳에서 관리하는 기술")])]),t._v(" "),s("p",[t._v("두 기술은 사상부터 다른 시작점에서 출발했다. (="),s("strong",[t._v("패러다임 불일치")]),t._v(")")]),t._v(" "),s("p",[t._v("서로 지향하는 바가 다른 2개 영역을 "),s("strong",[t._v("중간에서 패러다임 일치")]),t._v("를 시켜주기 위해 JPA가 등장했다.")]),t._v(" "),s("p",[t._v("JPA는 Application과 JDBC 사이에서 동작한다.")]),t._v(" "),s("h2",{attrs:{id:"jpa를-사용하는-이유"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jpa를-사용하는-이유"}},[t._v("#")]),t._v(" JPA를 사용하는 이유")]),t._v(" "),s("hr"),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("SQL 중심적인 개발 → 객체 중심적인 개발")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("CRUD 작업 간결화")])]),t._v(" "),s("ol",[s("li",[t._v("Create : jpa.persist(member)")]),t._v(" "),s("li",[t._v("Read : Member member = jpa.find(memberId)")]),t._v(" "),s("li",[t._v('Update : member.setName("변경할 이름")')]),t._v(" "),s("li",[t._v("Delete : jpa.remove(member)")])]),t._v(" "),s("p",[t._v("위와 같이 써주면 알아서 sql문을 매핑해준다.")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("유지보수 편의성 증가")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("패러다임 불일치 해결")])]),t._v(" "),s("ol",[s("li",[t._v("상속관계 해결 (SQL에서 JOIN으로 연결해야하는 부분을 상속처럼 이용하여 해결)")])]),t._v(" "),s("ol",[s("li",[t._v("연관관계 (FK에 의존하지 않아 JOIN을 사용할 필요가 없어 SQL에 덜 의존적임)")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("성능 문제 해결")])]),t._v(" "),s("ol",[s("li",[t._v("1차 캐시와 동일성 보장 (같은 트랜잭션 안에서는 캐싱을 통해 같은 Entity를 반환함)")]),t._v(" "),s("li",[t._v("쓰기 지연을 지원함 (JDBC BATCH SQL 기능을 통해 모아놓은 SQL을 한번에 전송함)")]),t._v(" "),s("li",[t._v("즉시 로딩과 지연 로딩\n"),s("ul",[s("li",[t._v("즉시 로딩 : JOIN으로 한번에 연관된 객체까지 미리 조회함")]),t._v(" "),s("li",[t._v("지연 로딩 : 객체가 실제로 사용될 때 로딩됨")])])]),t._v(" "),s("li",[t._v("데이터 접근 추상화 벤더 독립성\nJPA는 interface의 집합으로써 특정 DB에 종속적이지 않아, 대부분의 DB를 사용가능")])])])]),t._v(" "),s("p",[t._v("데이터베이스를 객체답게 모델링 할 수록 SQL과 매핑하는 작업만 늘어나게 되어 SQL에 의존적인 설계방식이 되어버린다.")]),t._v(" "),s("p",[t._v("JPA는 객체를 List와 같은 자바 컬렉션에 저장하듯이 DB에 저장하여 문제를 해결한다.")]),t._v(" "),s("h2",{attrs:{id:"영속성-관리"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#영속성-관리"}},[t._v("#")]),t._v(" 영속성 관리")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"영속성-context"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#영속성-context"}},[t._v("#")]),t._v(" 영속성 Context")]),t._v(" "),s("ul",[s("li",[t._v("Entity를 영구 저장하는 환경")]),t._v(" "),s("li",[t._v("EntityManage를 통해서 영속성 Context에 접근할 수 있음")])]),t._v(" "),s("h3",{attrs:{id:"영속성-생명-주기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#영속성-생명-주기"}},[t._v("#")]),t._v(" 영속성 생명 주기")]),t._v(" "),s("ul",[s("li",[t._v("비영속(new/transient) : 영속성 Context와 전혀 관계가 없는 새로운 상태")]),t._v(" "),s("li",[t._v("영속(managed) : JPA를 통해 객체가 영구 저장된 상태")]),t._v(" "),s("li",[t._v("준영속(detached) : 영속 상태였던 객체를 영속성 Context에서 분리한 상태")]),t._v(" "),s("li",[t._v("삭제(removed) : 객체를 삭제한 상태")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 객체를 생성: 비영속")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Member")]),t._v(" member "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Member")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmember"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setId")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"membeA"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmember"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Joon"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EntityManager")]),t._v(" em "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" emf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createEntityManager")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTransaction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 객체를 저장: 영속")]),t._v("\nem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("persist")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("member"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 객체를 분리: 준영속")]),t._v("\nem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("detach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("member"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 객체를 제거: 삭제")]),t._v("\nem"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("member"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"spring-data-jpa"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-data-jpa"}},[t._v("#")]),t._v(" Spring DATA JPA")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("JPA 구현체들을 좀 더 쉽게 사용하고자 추상화시킨 모듈")]),t._v(" "),s("p",[t._v("JPA ← Hibernate ← Spring Data JPA")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Spring Data JPA와 Hibernate를 같이 쓰는 이유")]),t._v(" "),s("ol",[s("li",[t._v("구현체 교체의 용이성 (Hibernate 외에 다른 구현체로 쉽게 교체 가능)")]),t._v(" "),s("li",[t._v("저장소 교체의 용이성 (관계형 데이터베이스 외에 다른 저장소로 쉽게 교체 가능)")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);