(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{440:function(t,s,a){"use strict";a.r(s);var n=a(22),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_1-2-git-bash의-기본-명령어들"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-git-bash의-기본-명령어들"}},[t._v("#")]),t._v(" 1-2. Git Bash의 기본 명령어들")]),t._v(" "),a("h2",{attrs:{id:"git-help"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-help"}},[t._v("#")]),t._v(" git --help")]),t._v(" "),a("p",[t._v("깃 명령어 관련 도움말")]),t._v(" "),a("h2",{attrs:{id:"prompt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prompt"}},[t._v("#")]),t._v(" prompt")]),t._v(" "),a("p",[t._v("$기호와 윗줄에 표시되는 경로 등을 합쳐서 프롬프트(prompt) 라고 한다.")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/Git/git-1-2-1.png",alt:"git-1-2-1"}})]),t._v(" "),a("h2",{attrs:{id:"기본-명령어"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#기본-명령어"}},[t._v("#")]),t._v(" 기본 명령어")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/Git/git-1-2-2.png",alt:"git-1-2-2"}})]),t._v(" "),a("h2",{attrs:{id:"git-로컬저장소-생성하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-로컬저장소-생성하기"}},[t._v("#")]),t._v(" Git 로컬저장소 생성하기")]),t._v(" "),a("p",[t._v("우선 자기가 만드려는 경로로 이동한다.")]),t._v(" "),a("p",[t._v("그리고 아래와 같이 명령어를 작성한다.")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" hello-git-cli "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 새로운 폴더 생성")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" hello-git-cli "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 생성한 폴더로 이동")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 현재 경로 확인")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Git 저장소의 상태를 알려주는 명령어")]),t._v("\n\n")])])]),a("p",[t._v("git status 명령을 실행하면 에러가 발생할 것이다.")]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/Git/git-1-2-3.png",alt:"git-1-2-3"}})]),t._v(" "),a("p",[t._v('"not a git repository"라고 한다.')]),t._v(" "),a("p",[t._v('즉, "현재 디렉토리는 Git 저장소가 아니다." 라는 뜻이다.')]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("git status")]),t._v(" : git 워킹트리의 상태를 보는 명령어")]),t._v(" "),a("li",[a("strong",[t._v("git status -s")]),t._v(" : git status 명령보다 짧게 요약해서 보여주며, 변경된 파일이 많을 때 유용하다.")])]),t._v(" "),a("p",[t._v("만약 상위에 있는 폴더들 중에 Git 저장소로 이미 초기화 되어있는 폴더가 있다면 git status 명령이 에러없이 실행될 수도 있다!")]),t._v(" "),a("p",[t._v("git status 명령이 에러없이 실행될 수도 있다.")]),t._v(" "),a("h2",{attrs:{id:"git-저장소-만드는-법-git-저장소-초기화"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-저장소-만드는-법-git-저장소-초기화"}},[t._v("#")]),t._v(" Git 저장소 만드는 법 (=Git 저장소 초기화)")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Git 저장소 생성")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v(" -a "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 파일 목록 확인 (숨김파일까지 확인)")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n")])])]),a("p",[t._v('"git init"이 잘 되었다면 아래와 같이 경로 끝에 (master)가 붙은 것을 알 수 있다.')]),t._v(" "),a("p",[a("img",{attrs:{src:"/images/Git/git-1-2-4.png",alt:"git-1-2-4"}})]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("git init")]),t._v(" : Git 저장소 생성")])]),t._v(" "),a("h2",{attrs:{id:"용어-정리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#용어-정리"}},[t._v("#")]),t._v(" 용어 정리")]),t._v(" "),a("ul",[a("li",[t._v("워킹트리 : 작업 폴더에서 [.git]폴더를 뺀 나머지 부분. 일반적인 작업이 일어나는 곳을 뜻한다.")]),t._v(" "),a("li",[t._v("로컬저장소 : 숨김 처리되는 .git 폴더")]),t._v(" "),a("li",[t._v("원격저장소 : GitHub와 같은 저장소를 업로드할 수 있는 곳을 뜻한다.")]),t._v(" "),a("li",[t._v("Git 저장소 : Git 명령으로 관리할 수 있는 폴더 전체")])]),t._v(" "),a("h2",{attrs:{id:"옵션-설정하기-git-config"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#옵션-설정하기-git-config"}},[t._v("#")]),t._v(" 옵션 설정하기 (git config)")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --local : 지역 (현재 Git 저장소에서만 유효한 옵션)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --global : 전역 (현재 사용자를 위한 옵션)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --system : 시스템 (PC 전체의 사용자를 위한 옵션)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 지정한 전역 옵션의 **내용을 살펴본다**.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("옵션명"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 지정한 전역 옵션의 **값을 새로 설정한다**.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("옵션명"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("새로운 값"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 지정한 전역 옵션을 **삭제한다**.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global --unset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("옵션명"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 현재 프로젝트의 모든 옵션을 살펴본다.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list\n")])])]),a("p",[t._v("우선순위는 지역 > 전역 > 시스템 순으로 지역옵션이 가장 우선순위가 높다.")]),t._v(" "),a("p",[t._v("공용 PC에서는 지역 옵션을 써야 다른사람들의 Git에 영향이 가지 않는다.")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Giwon Lim")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Cat Hanbit"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 사용자 이름이 Cat Hanbit으로 바뀜")]),t._v("\n\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --system core.editor\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Git에서 설정되어 있는 default 텍스트 에디터를 알려줌")]),t._v("\n")])])]),a("p",[t._v("Git에서 사용하는 텍스트 에디터는 default가 vim이나 nano로 되어있는데,")]),t._v(" "),a("p",[t._v("사용자 편의상 Visual Studio Code로 변경하는 것이 좋다.")]),t._v(" "),a("h2",{attrs:{id:"요약"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#요약"}},[t._v("#")]),t._v(" 요약")]),t._v(" "),a("ol",[a("li",[t._v("자신이 원하는 디렉토리로 이동한다.")]),t._v(" "),a("li",[t._v('"mkdir 폴더이름"으로 Git 저장소로 쓸 폴더를 생성한다.')]),t._v(" "),a("li",[t._v('"cd 폴더이름"으로 생성한 폴더로 이동한다.')]),t._v(" "),a("li",[t._v('"git init" 입력 ("git status"로 제대로 저장소가 만들어졌는지 확인할 수 있다.)')])])])}),[],!1,null,null,null);s.default=e.exports}}]);