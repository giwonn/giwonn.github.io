(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{450:function(t,s,a){"use strict";a.r(s);var n=a(22),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_3-4장-변수"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4장-변수"}},[t._v("#")]),t._v(" 3,4장. 변수")]),t._v(" "),a("h2",{attrs:{id:"메모리란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#메모리란"}},[t._v("#")]),t._v(" 메모리란?")]),t._v(" "),a("p",[t._v("데이터를 저장할 수 있는 메모리 셀(memory cell)의 집합체.")]),t._v(" "),a("p",[t._v("메모리 셀 하나의 크기는 1byte(=8bit)이며, 컴퓨터는 1바이트 단위로 데이터를 save 및 read한다.")]),t._v(" "),a("h2",{attrs:{id:"변수란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#변수란"}},[t._v("#")]),t._v(" 변수란?")]),t._v(" "),a("p",[t._v("하나의 값을 저장하기 위해 확보한 메모리 공간이다.")]),t._v(" "),a("h2",{attrs:{id:"할당과-참조의-차이"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#할당과-참조의-차이"}},[t._v("#")]),t._v(" 할당과 참조의 차이")]),t._v(" "),a("p",[t._v("할당 : 변수에 값을 저장하는것")]),t._v(" "),a("p",[t._v("참조 : 변수에 저장된 값을 읽어들이는 것")]),t._v(" "),a("h2",{attrs:{id:"식별자"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#식별자"}},[t._v("#")]),t._v(" 식별자")]),t._v(" "),a("p",[t._v("일반적으로 변수의 이름을 식별자라고도 한다.")]),t._v(" "),a("p",[t._v("식별자는 값이 아니라 메모리 주소를 기억하고 있다.")]),t._v(" "),a("h2",{attrs:{id:"키워드-var-let-const"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#키워드-var-let-const"}},[t._v("#")]),t._v(" 키워드 (var, let, const)")]),t._v(" "),a("p",[a("strong",[t._v("var :")]),t._v(" ES6이전의 JS 변수 선언 키워드이며, 함수 레벨 스코프를 지원한다.\n(함수 내부에 선언된 변수 외에는 전부 지역변수 취급함)")]),t._v(" "),a("p",[a("strong",[t._v("let :")]),t._v(" ES6에서의 "),a("strong",[t._v("변수")]),t._v(" 선언 키워드이며, 블록 레벨 스코프를 지원한다.")]),t._v(" "),a("p",[a("strong",[t._v("const :")]),t._v(" ES6에서의 "),a("strong",[t._v("상수")]),t._v(" 선언 키워드이며, 블록 레벨 스코프를 지원한다.")]),t._v(" "),a("ol",[a("li",[t._v("var로 선언한 변수는 선언 전에(코드상 위쪽에서) 사용해도 에러가 나지 않지만 let, const는 에러가 난다. (let,const는 초기화를 안해주기 때문이다.)")]),t._v(" "),a("li",[t._v("var는 이미 선언되어 있는 변수명을 다시 써도 에러가 나지 않는다.")]),t._v(" "),a("li",[t._v("var, let은 선언 시에 초기값을 주지 않아도 되지만 const는 초기값을 반드시 할당해야 한다.")]),t._v(" "),a("li",[a("strong",[t._v("const는")]),t._v(" 상수이므로 한번 할당한 값을 변경할 수 없지만, "),a("strong",[t._v("객체인경우 객체의 메모리주소를 변경할 수 없을 뿐 내부의 값을 변경 가능하다!(즉, 객체 안의 property가 변경되는것까지는 막지 못한다)")])])]),t._v(" "),a("h2",{attrs:{id:"var에-대하여"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var에-대하여"}},[t._v("#")]),t._v(" var에 대하여")]),t._v(" "),a("ol",[a("li",[t._v("선언 단계 : 변수 이름을 등록해서 JS엔진에 변수의 존재를 알린다.")]),t._v(" "),a("li",[t._v("초기화 단계 : 값을 저장하기 위한 메모리 공간을 확보하고 암묵적으로 undefined를 할당해 초기화한다.")])]),t._v(" "),a("h2",{attrs:{id:"호이스팅"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#호이스팅"}},[t._v("#")]),t._v(" 호이스팅")]),t._v(" "),a("p",[t._v("var, let, const, function, function*, class 키워드를 사용하는 모든 식별자는 호이스팅된다.")]),t._v(" "),a("p",[t._v("JS는 코드를 실행하기 전, '코드 평가 과정'을 거치는데, 이 때 변수 선언문을 미리 실행해두기 때문에 나중에 선언된 변수도 앞의 코드에서 참조할 수 있게 된다.")]),t._v(" "),a("p",[t._v("이를 "),a("strong",[t._v("변수 호이스팅")]),t._v("이라고 한다.")]),t._v(" "),a("ul",[a("li",[t._v("var : 코드 평과 가정에서 선언과 (일단 undefined로)초기화 동시에 수행")])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 출력")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*----------------------------------*/")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined 출력")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("let, const : 코드 실행 과정에서 변수 선언문을 만났을때 초기화 수행")])]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 블록 내부의 foo가 초기화가 안됐기 때문에 Referrence Error 출력")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*----------------------------------*/")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// foo가 아직 초기화가 안됐기 때문에 Referrence Error출력")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("let, const는 블록레벨 스코프이므로 블록 안에 있는")]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("가 이미 호이스팅 되었기 때문에 블록 바깥의 foo = 1을 출력하지 못한다.")]),t._v(" "),a("h2",{attrs:{id:"undefined"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[t._v("#")]),t._v(" undefined")]),t._v(" "),a("p",[t._v("JavaScript에서 제공하는 원시 타입의 값이다.")]),t._v(" "),a("p",[t._v("6장에서 자세히 다룰것이므로 일단 넘어감!")]),t._v(" "),a("h2",{attrs:{id:"실행-컨텍스트"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#실행-컨텍스트"}},[t._v("#")]),t._v(" 실행 컨텍스트")]),t._v(" "),a("ol",[a("li",[t._v("JS엔진이 소스코드를 평가하고 실행하기 위해 필요한 환경을 제공하고, 코드의 실행 결과를 실제로 관리하는 영역이다.")]),t._v(" "),a("li",[t._v("식별자와 스코프를 관리한다.")]),t._v(" "),a("li",[t._v("변수이름과 값은 K:V 형식으로 등록되어 관리된다. (13장, 23장에서 자세히 다룰것)")])]),t._v(" "),a("h2",{attrs:{id:"값의-재할당"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#값의-재할당"}},[t._v("#")]),t._v(" 값의 재할당")]),t._v(" "),a("p",[t._v("값을 재할당하면 다른 메모리에 값을 재할당한다.")]),t._v(" "),a("p",[t._v("버려진 메모리는 가비지 콜렉터에 의해 자동 해제된다.")]),t._v(" "),a("p",[t._v("단, 언제 해제될지는 예측할 수 없다.")]),t._v(" "),a("div",{staticClass:"language-jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" score "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 변수 선언과 값의 재할당(undefined -> 80)")]),t._v("\nscore "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 값의 재할당")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);